// ACƒ∞L: Varsayƒ±lan Admin Hesabƒ±nƒ± Sil
// Bu script hemen √ßalƒ±≈ütƒ±rƒ±lmalƒ±!

const { PrismaClient } = require('@prisma/client')

const prisma = new PrismaClient()

async function removeDefaultAdmin() {
  try {
    console.log('üö® ACƒ∞L: Varsayƒ±lan admin hesabƒ± siliniyor...')
    
    // T√ºm varsayƒ±lan admin hesaplarƒ±nƒ± sil
    const deleted = await prisma.user.deleteMany({
      where: { 
        email: 'info@modabase.com.tr',
        role: 'ADMIN'
      }
    })
    
    console.log(`‚úÖ ${deleted.count} varsayƒ±lan admin hesabƒ± silindi`)
    
    // Diƒüer tehlikeli varsayƒ±lan hesaplarƒ± da kontrol et
    const dangerousEmails = [
          'admin@modabase.com.tr',
    'super@modabase.com.tr',
    'test@modabase.com.tr',
    'demo@modabase.com.tr'
    ]
    
    for (const email of dangerousEmails) {
      const deletedTest = await prisma.user.deleteMany({
        where: { 
          email: email,
          role: 'ADMIN'
        }
      })
      
      if (deletedTest.count > 0) {
        console.log(`‚ö†Ô∏è  ${deletedTest.count} tehlikeli hesap silindi: ${email}`)
      }
    }
    
    console.log('\nüîí G√ºvenlik Durumu:')
    console.log('‚úÖ Varsayƒ±lan admin hesaplarƒ± temizlendi')
    console.log('‚ö†Ô∏è  ≈ûimdi yeni g√ºvenli admin hesabƒ± olu≈üturun:')
    console.log('   node scripts/create-secure-admin.js')
    
  } catch (error) {
    console.error('‚ùå Hata:', error.message)
    throw error
  } finally {
    await prisma.$disconnect()
  }
}

// Script'i √ßalƒ±≈ütƒ±r
if (require.main === module) {
  removeDefaultAdmin()
    .then(() => {
      console.log('\n‚úÖ Acil m√ºdahale tamamlandƒ±!')
      process.exit(0)
    })
    .catch((error) => {
      console.error('‚ùå Fatal Error:', error)
      process.exit(1)
    })
}

module.exports = { removeDefaultAdmin }
